(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{451:function(t,s,a){"use strict";a.r(s);var r=a(21),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"不知道从哪里抄的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不知道从哪里抄的"}},[t._v("#")]),t._v(" 不知道从哪里抄的")]),t._v(" "),a("h3",{attrs:{id:"如何查看表格定义的所有索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何查看表格定义的所有索引"}},[t._v("#")]),t._v(" 如何查看表格定义的所有索引")]),t._v(" "),a("p",[a("code",[t._v("SHOW INDEX FROM <tablename>;")])]),t._v(" "),a("h3",{attrs:{id:"like-声明中的-和-是什么意思"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#like-声明中的-和-是什么意思"}},[t._v("#")]),t._v(" LIKE 声明中的％和 _ 是什么意思？")]),t._v(" "),a("p",[t._v("％对应于 0 个或更多字符，_只是 LIKE 语句中的一个字符。")]),t._v(" "),a("h3",{attrs:{id:"如何在-unix-和-mysql-时间戳之间进行转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何在-unix-和-mysql-时间戳之间进行转换"}},[t._v("#")]),t._v(" 如何在 Unix 和 MySQL 时间戳之间进行转换？")]),t._v(" "),a("p",[t._v("UNIX_TIMESTAMP 是从 MySQL 时间戳转换为 Unix 时间戳的命令")]),t._v(" "),a("p",[t._v("FROM_UNIXTIME 是从 Unix 时间戳转换为 MySQL 时间戳的命令")]),t._v(" "),a("h3",{attrs:{id:"列对比运算符是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列对比运算符是什么"}},[t._v("#")]),t._v(" 列对比运算符是什么？")]),t._v(" "),a("p",[t._v("在 SELECT 语句的列比较中使用=，<>，<=，<，> =，>，<<，>>，<=>，AND， OR 或 LIKE 运算符。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("<>、!=")]),t._v(" 不等于")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("<<")]),t._v("  位运算（左移）")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("<=>")]),t._v(" 安全比较运算符，用来做 NULL 值的关系运算。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v(":=")]),t._v("   和= 差不多，= 只有在 set 和update时才是和 := 一样，"),a("strong",[t._v("赋值")]),t._v("的作用，其它都是关系运算符 "),a("strong",[t._v("等于")]),t._v(" 的作用，:= 不只在 set 和 update 时赋值的作用，在 select 也是赋值的作用。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("@")]),t._v(" 用户变量")]),t._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"big_cat"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'big_cat'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@name")]),t._v(" :"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'big_cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("@@")]),t._v(" 系统变量")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("SELECT @@global.sort_buffer_size;\nSHOW GLOBAL VARIABLES LIKE 'sort_buffer_size';\nSET @@global.sort_buffer_size = 2 * 1024 * 1024;\nSET SESSION sort_buffer_size = 2 * 1024 * 1024;\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])]),t._v(" "),a("p",[t._v("更多运算符参考：")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.runoob.com/mysql/mysql-operator.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL 运算符 | 菜鸟教程 (runoob.com)"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://my.oschina.net/sallency/blog/1812158",target:"_blank",rel:"noopener noreferrer"}},[t._v("mysql 运算符 <=>，:=，@，@@的含义 - big_cat - OSCHINA - 中文开源技术交流社区"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"blob-和-text-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blob-和-text-有什么区别"}},[t._v("#")]),t._v(" BLOB 和 TEXT 有什么区别？")]),t._v(" "),a("p",[t._v("BLOB 是一个二进制对象，可以容纳可变数量的数据。TEXT 是一个不区分大小写 的 BLOB。 BLOB 和 TEXT 类型之间的唯一区别在于对 BLOB 值进行排序和比较时区分大小 写，对 TEXT 值不区分大小写。")]),t._v(" "),a("h3",{attrs:{id:"非标准字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非标准字符串类型"}},[t._v("#")]),t._v(" 非标准字符串类型？")]),t._v(" "),a("p",[t._v("1、TINYTEXT 2、TEXT 3、MEDIUMTEXT 4、LONGTEXT")]),t._v(" "),a("h3",{attrs:{id:"通用-sql-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用-sql-函数"}},[t._v("#")]),t._v(" 通用 SQL 函数？")]),t._v(" "),a("ol",[a("li",[t._v("CONCAT(A, B) – 连接两个字符串值以创建单个字符串输出。通常用于将两个 或多个字段合并为一个字段。")]),t._v(" "),a("li",[t._v("FORMAT(X, D)- 格式化数字 X 到 D 有效数字。")]),t._v(" "),a("li",[t._v("CURRDATE(), CURRTIME()- 返回当前日期或时间。")]),t._v(" "),a("li",[t._v("NOW（） – 将当前日期和时间作为一个值返回。")]),t._v(" "),a("li",[t._v("MONTH（），DAY（），YEAR（），WEEK（），WEEKDAY（） – 从日期 值中提取给定数据。")]),t._v(" "),a("li",[t._v("HOUR（），MINUTE（），SECOND（） – 从时间值中提取给定数据。")]),t._v(" "),a("li",[t._v("DATEDIFF（A，B） – 确定两个日期之间的差异，通常用于计算年龄")]),t._v(" "),a("li",[t._v("SUBTIMES（A，B） – 确定两次之间的差异。")]),t._v(" "),a("li",[t._v("FROMDAYS（INT） – 将整数天数转换为日期值。")])]),t._v(" "),a("h3",{attrs:{id:"锁的优化策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#锁的优化策略"}},[t._v("#")]),t._v(" 锁的优化策略")]),t._v(" "),a("p",[t._v("1、读写分离 2、分段加锁 3、减少锁持有的时间 4.多个线程尽量以相同的顺序去获取资源")]),t._v(" "),a("p",[t._v("不能将锁的粒度过于细化，不然可能会出现线程的加锁和释放次数过多，反而效 率不如一次加一把大锁。")]),t._v(" "),a("h3",{attrs:{id:"完整性约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整性约束"}},[t._v("#")]),t._v(" 完整性约束")]),t._v(" "),a("p",[t._v("数据完整性(Data Integrity)是指数据的精确(Accuracy)和可靠性(Reliability)。")]),t._v(" "),a("p",[t._v("分为以下四类：")]),t._v(" "),a("ol",[a("li",[t._v("实体完整性：规定表的每一行在表中是惟一的实体。")]),t._v(" "),a("li",[t._v("域完整性：是指表中的列必须满足某种特定的数据类型约束，其中约束又包括 取值范围、精度等规定。")]),t._v(" "),a("li",[t._v("参照完整性：是指两个表的主关键字和外关键字的数据应一致，保证了表之间 的数据的一致性，防止了数据丢失或无意义的数据在数据库中扩散。")]),t._v(" "),a("li",[t._v("用户定义的完整性：不同的关系数据库系统根据其应用环境的不同，往往还需 要一些特殊的约束条件。用户定义的完整性即是针对某个特定关系数据库的约束 条件，它反映某一具体应用必须满足的语义要求。")])]),t._v(" "),a("p",[t._v("与表有关的约束：包括列约束(NOT NULL（非空约束）)和表约束(PRIMARY KEY、 foreign key、check、UNIQUE) 。")])])}),[],!1,null,null,null);s.default=e.exports}}]);