(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{486:function(v,_,l){"use strict";l.r(_);var i=l(21),a=Object(i.a)({},(function(){var v=this,_=v.$createElement,l=v._self._c||_;return l("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[l("p",[v._v("Dubbo(读音[ˈdʌbəʊ])是阿里巴巴公司开源的一个高性能优秀的服务框架，使得应用可通过高性能的RPC 实现服务的输出和输入功能，可以和 Spring框架无缝集成。 Dubbo是一款高性能、轻量级的开源Java RPC框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。")]),v._v(" "),l("p",[l("strong",[v._v("阿里巴巴")])]),v._v(" "),l("ol",[l("li",[v._v("对象如何进行深拷贝，除了clone")]),v._v(" "),l("li",[v._v("happen-before原则")]),v._v(" "),l("li",[v._v("jvm调优的实践")]),v._v(" "),l("li",[v._v("单例对象会被jvm的gc时回收吗")]),v._v(" "),l("li",[v._v("redis如果list较大，怎么优化")]),v._v(" "),l("li",[v._v("tcp的沾包与半包")]),v._v(" "),l("li",[v._v("socket编程相关的一些api和用法")]),v._v(" "),l("li",[v._v("建立和处理连接的是同一个socket吗，socket中两个队列分别是啥")]),v._v(" "),l("li",[v._v("项目中有使用过netty吗")]),v._v(" "),l("li",[v._v("TSL1.3新特性")]),v._v(" "),l("li",[v._v("AES算法原理")]),v._v(" "),l("li",[v._v("redis集群的使用")]),v._v(" "),l("li",[v._v("mysql与mogo对比")]),v._v(" "),l("li",[v._v("场景题：设计一个im系统包括群聊单聊")]),v._v(" "),l("li",[v._v("场景题：设计数据库连接池")]),v._v(" "),l("li",[v._v("场景题：秒杀场景的设计")])]),v._v(" "),l("h3",{attrs:{id:"美团"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#美团"}},[v._v("#")]),v._v(" "),l("strong",[v._v("美团")])]),v._v(" "),l("ol",[l("li",[v._v("项目详细信息，涉及一些aiot交互处理，怎么实现大量的不同设备的指令编解码和指令转化，服务器的架构，自己责任模块")]),v._v(" "),l("li",[v._v("OOM的故障处理")]),v._v(" "),l("li",[v._v("有没有用过分布式锁，怎么实现的，讲讲原理")]),v._v(" "),l("li",[v._v("redis的跳表用在哪，为什么用跳表")]),v._v(" "),l("li",[v._v("mysql优化的实践经验")]),v._v(" "),l("li",[v._v("hashMap的1.8与1.7区别")]),v._v(" "),l("li",[v._v("netty的原理和使用")]),v._v(" "),l("li",[v._v("tcp的连接过程")]),v._v(" "),l("li",[v._v("socket有几个队列")]),v._v(" "),l("li",[v._v("一台服务器能支持多少连接，为什么")]),v._v(" "),l("li",[v._v("tcp各个参数怎么设置")]),v._v(" "),l("li",[v._v("redis底层基本数据类型，redis集群原理，cluster集群的使用")]),v._v(" "),l("li",[v._v("mysql存储引擎类型，索引类型，innodb数据存储方式")]),v._v(" "),l("li",[v._v("线程池的参数说明，rejectHandler说明")]),v._v(" "),l("li",[v._v("volatile的原理")]),v._v(" "),l("li",[v._v("jvm有哪几种垃圾回收器，各自的应用场景")]),v._v(" "),l("li",[v._v("g1回收器的特征")]),v._v(" "),l("li",[v._v("jvm结构")]),v._v(" "),l("li",[v._v("负载均衡器的四层和七层负载均衡原理")]),v._v(" "),l("li",[v._v("场景题：设计一个高可用高并发的电商系统")])]),v._v(" "),l("h3",{attrs:{id:"腾讯"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#腾讯"}},[v._v("#")]),v._v(" "),l("strong",[v._v("腾讯")])]),v._v(" "),l("ol",[l("li",[v._v("kafka生产端怎么实现幂等的")]),v._v(" "),l("li",[v._v("kafka如何实现分布式消息")]),v._v(" "),l("li",[v._v("kafka的slave的同步机制")]),v._v(" "),l("li",[v._v("kafka怎么进行消息写入的ack")]),v._v(" "),l("li",[v._v("为什么实现equals必须先实现hash方法")]),v._v(" "),l("li",[v._v("一个对象new出来后的结构，怎么保存的")]),v._v(" "),l("li",[v._v("讲一讲类加载的过程")]),v._v(" "),l("li",[v._v("redis的hash数据结构和如何扩容")]),v._v(" "),l("li",[v._v("mysql快照读怎么实现的")]),v._v(" "),l("li",[v._v("msyql 的事务隔离级别，不可重复读和幻读区别")])]),v._v(" "),l("h3",{attrs:{id:"yy"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#yy"}},[v._v("#")]),v._v(" "),l("strong",[v._v("YY")])]),v._v(" "),l("ol",[l("li",[v._v("JVM调优思路")]),v._v(" "),l("li",[v._v("redis cluster集群扩容怎么数据平滑过度，从客户端设计")]),v._v(" "),l("li",[v._v("mysql 的sql本身没问题的情况下，没走索引原因（反复强调sql没问题，不需要从sql角度考虑）")]),v._v(" "),l("li",[v._v("kafka如何确保消息不丢失")]),v._v(" "),l("li",[v._v("分库分表如何进行跨库联合查询")]),v._v(" "),l("li",[v._v("限流设计用java实现，不能用工具类库")]),v._v(" "),l("li",[v._v("dubbo的设计和完整调用过程（要详细）")]),v._v(" "),l("li",[v._v("es的脑裂问题怎么解决")])]),v._v(" "),l("h3",{attrs:{id:"毒-得物"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#毒-得物"}},[v._v("#")]),v._v(" "),l("strong",[v._v("毒（得物）")])]),v._v(" "),l("ol",[l("li",[v._v("new 一个对象的过程发生了什么")]),v._v(" "),l("li",[v._v("spring循环引用解决的原理是什么？")]),v._v(" "),l("li",[v._v("FactoryBean 和 BeanFactory区别")]),v._v(" "),l("li",[v._v("Synchronized原理？")]),v._v(" "),l("li",[v._v("CAS volatile原理？")]),v._v(" "),l("li",[v._v("内存模型？什么是主内存？什么是工作内存？")]),v._v(" "),l("li",[v._v("数据库索引类型？原理？")]),v._v(" "),l("li",[v._v("Spring Bean 生命周期？")]),v._v(" "),l("li",[v._v("mysql优化经验？")]),v._v(" "),l("li",[v._v("mysql锁类型？")]),v._v(" "),l("li",[v._v("redis使用过程中应该注意什么问题？")]),v._v(" "),l("li",[v._v("JVM调优参数？")]),v._v(" "),l("li",[v._v("线程池原理？属性代表含义？")]),v._v(" "),l("li",[v._v("HashMap ConcurrentHashMap原理？")])]),v._v(" "),l("h3",{attrs:{id:"饿了么"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#饿了么"}},[v._v("#")]),v._v(" "),l("strong",[v._v("饿了么")])]),v._v(" "),l("ol",[l("li",[v._v("项目介绍，怎么不断优化项目、架构升级？如果业务量剧增，怎么保证系统高可用、扩展性？")]),v._v(" "),l("li",[v._v("订单量、日新增多少？分库分表怎么做？基于什么维度去做？")]),v._v(" "),l("li",[v._v("检测到jvm内存大于配置jvm的xmx配置的内存， 三台机器中的一台机器有上面这种现象，如何解释？")]),v._v(" "),l("li",[v._v("redis热key怎么解决？")]),v._v(" "),l("li",[v._v("kafka为什么性能高？")]),v._v(" "),l("li",[v._v("OOM场景分析？")]),v._v(" "),l("li",[v._v("mysql集群是怎么部署的，主从同步？")]),v._v(" "),l("li",[v._v("怎么设置使用什么GC方式？不同年代GC收集器有哪些？")]),v._v(" "),l("li",[v._v("线上CPU很高怎么排查")]),v._v(" "),l("li",[v._v("jdk1.8的新特性")]),v._v(" "),l("li",[v._v("BIO\\NIO了解")]),v._v(" "),l("li",[v._v("mq怎么保证消息可靠性？")]),v._v(" "),l("li",[v._v("系统负载过高怎么办、什么问题导致的？怎么排查？")]),v._v(" "),l("li",[v._v("linux操作系统简单介绍有哪些东西？")])]),v._v(" "),l("h3",{attrs:{id:"中通"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#中通"}},[v._v("#")]),v._v(" "),l("strong",[v._v("中通")])]),v._v(" "),l("ol",[l("li",[v._v("JVM介绍")]),v._v(" "),l("li",[v._v("JMM模型")]),v._v(" "),l("li",[v._v("gc root有哪些？")]),v._v(" "),l("li",[v._v("JVM调优经验？")]),v._v(" "),l("li",[v._v("线程池注意事项，异常处理")]),v._v(" "),l("li",[v._v("分布式锁使用和原理？")]),v._v(" "),l("li",[v._v("redis怎么持久化？高可用？")]),v._v(" "),l("li",[v._v("rpc框架实现原理？")]),v._v(" "),l("li",[v._v("接口调用变慢排查")]),v._v(" "),l("li",[v._v("业务系统架构，业务量")]),v._v(" "),l("li",[v._v("数据库设计，优化方案")])]),v._v(" "),l("h3",{attrs:{id:"鱼泡泡-比心"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#鱼泡泡-比心"}},[v._v("#")]),v._v(" "),l("strong",[v._v("鱼泡泡（比心）")])]),v._v(" "),l("ol",[l("li",[v._v("比较有成就的项目")]),v._v(" "),l("li",[v._v("清结算怎么实现的？")]),v._v(" "),l("li",[v._v("统一收银台设计？")]),v._v(" "),l("li",[v._v("rocketMq 和 kafka区别，选型？")]),v._v(" "),l("li",[v._v("kafka消息从生产到消费的流转过程？")]),v._v(" "),l("li",[v._v("hashMap hashTable区别？")]),v._v(" "),l("li",[v._v("对线程安全的理解？")]),v._v(" "),l("li",[v._v("CAS实现原理？")]),v._v(" "),l("li",[v._v("代码加锁有几种实现方式？")]),v._v(" "),l("li",[v._v("快速排序算法")]),v._v(" "),l("li",[v._v("分布式锁获取锁失败的处理，线程间的同步？")]),v._v(" "),l("li",[v._v("redis线程模型，过期机制，淘汰策略？")]),v._v(" "),l("li",[v._v("线程池参数，使用场景，参数设置分析？")]),v._v(" "),l("li",[v._v("mysql存储引擎，索引结构，分库分表")]),v._v(" "),l("li",[v._v("场景题：设计一个抢红包系统")])])])}),[],!1,null,null,null);_.default=a.exports}}]);